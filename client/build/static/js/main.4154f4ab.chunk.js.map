{"version":3,"sources":["../../node_modules/typescript/lib sync","components/DynamicArraysGrape.js","components/DynamicArrraysDesc.js","components/AddForm.js","components/UseStyles.js","components/DynamicGrapes.js","components/DynamicDescription.js","components/MobileBlocks.js","components/MobileBlocksData.js","components/App.js","registerServiceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","DynamicArraysGrape","props","field","validate","touched","undefined","notify","add","fields","map","i","key","remove","htmlFor","onClick","type","DynamicArraysDesc","AddForm","handleSubmit","onCurItemClear","handleUpdate","setCurItemStuff","useFormState","initialValues","grape","description","onSubmit","formApi","formState","value","disabled","onBlur","onChange","initialValue","event","reset","useStyles","makeStyles","theme","button","margin","spacing","input","display","card","maxWidth","minHeight","overflow","cardAdded","backgroundColor","cardRemoved","cardHidden","ButtonBase","color","buttonHidden","AvatarButton","fontSize","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatarRed","red","avatarWhite","avatarDessert","avatarCorovan","avatarSparkling","DynamicGrapes","DynamicDescription","MobileBlocks","data","hideRemoved","onSelect","handleSelect","curEditItem","editCardChange","editCard","curItem","unEditedItem","handleDelete","disableOtherEdits","setDisableOtherEdits","useState","_id","status","classes","React","expanded","setExpanded","deleteButtonEnable","setDeleteButton","editEnable","setEdit","disableSave","setDisabledSave","handleExpandClick","handleEdit","closeIt","onBlurValidate","prevState","console","log","target","dynamicBlurValidate","Card","className","raised","CardHeader","title","name","handleSelect2","hidden","window","confirm","size","text","vinyard","grapes","year","place","area","country","appellation","price","mise","CardActions","disableSpacing","IconButton","clsx","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","CardContent","funfact","Typography","variant","component","coravin","coravinCheck","result","index","paragraph","MobileBlocksData","glasses","cells","App","callBackendAPI","a","fetch","response","json","body","message","state","setState","then","results","remainder","filter","item","newItem","method","headers","Accept","JSON","stringify","res","ok","newData","catch","error","count","showMyComponent","onClear","unFilteredWines1","unFilteredWines","showAddForm","addFormHidden","handleNextClick","nextIndex","indexOf","handlePrevClick","glass","filteredWines","bind","createRef","this","glassesData","express","order","removed","added","none","sort","b","err","wines","mappedGlasses","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4154f4ab.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 112;","import React from \"react\";\r\nimport { Form, Text, ArrayField, BasicText } from \"informed\";\r\nconst DynamicArraysGrape = props => {\r\n  const validateLength = touched => {\r\n    return !touched ? \"must\" : undefined;\r\n  };\r\n  return (\r\n    <div>\r\n      <ArrayField field=\"grape\" validate={validateLength} notify={[\"you must\"]}>\r\n        {({ add, fields }) => (\r\n          <>\r\n            {fields.map(({ field, key, remove }, i) => (\r\n              <label htmlFor={i} key={key}>\r\n                Grape {i + 1}:\r\n                <Text field={field} id={`grape${i}`} />\r\n                <button onClick={add} type=\"button\">\r\n                  Add Grape\r\n                </button>{\" \"}\r\n                <button type=\"button\" onClick={remove}>\r\n                  Remove This Grape\r\n                </button>\r\n                <br></br>\r\n              </label>\r\n            ))}\r\n          </>\r\n        )}\r\n      </ArrayField>\r\n    </div>\r\n  );\r\n};\r\nexport default DynamicArraysGrape;\r\n","import React from \"react\";\r\nimport { Form, Text, ArrayField, BasicText } from \"informed\";\r\nconst DynamicArraysDesc = () => {\r\n  const validateLength = touched => {\r\n    return !touched ? \"must\" : undefined;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ArrayField field=\"description\" validate={validateLength}>\r\n        {({ add, fields }) => (\r\n          <>\r\n            {fields.map(({ field, key, remove }, i) => (\r\n              <label htmlFor={i} key={key}>\r\n                Description {i + 1}:\r\n                <Text field={field} id={`description${i}`} />\r\n                <button onClick={add} type=\"button\">\r\n                  Add Description\r\n                </button>{\" \"}\r\n                <button type=\"button\" onClick={remove}>\r\n                  Remove This Description\r\n                </button>\r\n                <br></br>\r\n              </label>\r\n            ))}\r\n          </>\r\n        )}\r\n      </ArrayField>\r\n    </div>\r\n  );\r\n};\r\nexport default DynamicArraysDesc;\r\n","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Form,\r\n  Text,\r\n  TextArea,\r\n  RadioGroup,\r\n  Radio,\r\n  Checkbox,\r\n  Select,\r\n  Option,\r\n  Scope,\r\n  useArrayField,\r\n  useFormState,\r\n  ArrayField\r\n} from \"informed\";\r\nimport DynamicArraysGrape from \"./DynamicArraysGrape\";\r\nimport DynamicArraysDesc from \"./DynamicArrraysDesc\";\r\nimport { PromiseProvider } from \"mongoose\";\r\n\r\nconst AddForm = props => {\r\n  const handleSubmit = props.handleSubmit;\r\n  const handleUpdate = props.handleUpdate;\r\n  let laura = false;\r\n  const onCurItemClear = props.onCurItemClear;\r\n  const setCurItemStuff = props.setCurItemStuff;\r\n\r\n  const formState = useFormState();\r\n  // console.log(formState);\r\n\r\n  return (\r\n    <Form\r\n      id=\"myForm\"\r\n      initialValues={{ grape: [\"\"], description: [\"\"] }}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      {({ formApi, formState }) => (\r\n        <div>\r\n          {/* <button type=\"button\" onClick={handleUpdateAndSubmit}>\r\n            change\r\n          </button> */}\r\n          {/* <ComponentUsingFormState /> */}\r\n          {/* <code>{JSON.stringify(formState.values)}</code>\r\n          <label>Touched:</label>\r\n          <code>{JSON.stringify(formState.touched)}</code> */}\r\n          {/* <code>{myFunction(formState.touched)}</code> */}\r\n          {/* <code>{JSON.stringify(formApi)}</code> */}\r\n          <br></br>\r\n          <label>\r\n            id\r\n            <Text value=\"\" field=\"_id\" disabled />\r\n          </label>\r\n          <label>\r\n            Name:\r\n            <Text value=\"\" field=\"name\" onBlur={props.onChange} />\r\n          </label>{\" \"}\r\n          <label>\r\n            Vinyard:\r\n            <Text field=\"vinyard\" onBlur={props.onChange} />\r\n          </label>{\" \"}\r\n          <label>\r\n            Grapes:\r\n            <Text field=\"grapes\" onBlur={props.onChange} />\r\n          </label>{\" \"}\r\n          <label>\r\n            Year:\r\n            <Text field=\"year\" type=\"number\" onBlur={props.onChange} />\r\n          </label>\r\n          <DynamicArraysGrape onBlur={props.onChange} />\r\n          <DynamicArraysDesc onBlur={props.onChange} />\r\n          <label>\r\n            Place:\r\n            <Text field=\"place\" onBlur={props.onChange} />\r\n          </label>{\" \"}\r\n          <label>\r\n            Area:\r\n            <Text field=\"area\" onBlur={props.onChange} />\r\n          </label>{\" \"}\r\n          <label>\r\n            Country:\r\n            <Text field=\"country\" onBlur={props.onChange} />\r\n          </label>{\" \"}\r\n          <label>\r\n            Appellation:\r\n            <Text field=\"appellation\" onBlur={props.onChange} />\r\n          </label>{\" \"}\r\n          <label>\r\n            Price:\r\n            <Text field=\"price\" type=\"number\" onBlur={props.onChange} />\r\n          </label>\r\n          <br></br>\r\n          <label>\r\n            Mise:\r\n            <Select field=\"mise\" initialValue=\"ap\" onBlur={props.onChange}>\r\n              <Option value=\"ap\">AP</Option>\r\n\r\n              <Option value=\"burg\"> BURG</Option>\r\n\r\n              <Option value=\"bdx\"> BDX</Option>\r\n\r\n              <Option value=\"flute\">Flute</Option>\r\n\r\n              <Option value=\"dw\">DW</Option>\r\n\r\n              <Option value=\"krug\">Krug Flute</Option>\r\n            </Select>\r\n          </label>\r\n          <label>\r\n            Color:\r\n            <Select field=\"color\" initialValue=\"red\">\r\n              <Option value=\"red\">Red</Option>\r\n              <Option value=\"white\">White</Option>\r\n              <Option value=\"dessert\">Dessert</Option>\r\n              <Option value=\"sparkling\">Sparkling</Option>\r\n            </Select>\r\n          </label>\r\n          <label>\r\n            Status:\r\n            <Select field=\"status\" initialValue=\"added\">\r\n              <Option value=\"added\">Added</Option>\r\n              <Option value=\"none\">None</Option>\r\n\r\n              <Option value=\"removed\">Removed</Option>\r\n              <Option value=\"hidden\">Hidden</Option>\r\n            </Select>\r\n          </label>\r\n          <label>\r\n            Coravin: <Checkbox field=\"coravin\" />\r\n          </label>\r\n          <br></br>\r\n          <br></br>\r\n          <label>\r\n            Fun Fact:\r\n            <TextArea field=\"funfact\" onBlur={props.onChange} />\r\n          </label>\r\n          <button type=\"submit\">submit</button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={event => {\r\n              formApi.reset();\r\n              onCurItemClear();\r\n            }}\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddForm;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n\r\n  input: {\r\n    display: \"none\"\r\n  },\r\n  card: {\r\n    maxWidth: 345,\r\n    display: \"inline-block\",\r\n    minHeight: 436,\r\n    overflow: \"hidden\"\r\n  },\r\n  cardAdded: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#E6E6FA\",\r\n    display: \"inline-block\",\r\n    minHeight: 436,\r\n    overflow: \"hidden\"\r\n  },\r\n  cardRemoved: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#FFA07A\",\r\n    display: \"inline-block\",\r\n    minHeight: 436,\r\n    overflow: \"hidden\"\r\n  },\r\n\r\n  cardHidden: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"yellow\",\r\n    display: \"inline-block\",\r\n    minHeight: 436,\r\n    overflow: \"hidden\"\r\n    // display: \"none\"\r\n  },\r\n  ButtonBase: {\r\n    color: \"blue\"\r\n  },\r\n  buttonHidden: {\r\n    backgroundColor: \"yellow\"\r\n  },\r\n  // text: {\r\n  //   // display: \"none\"\r\n  // },\r\n  AvatarButton: {\r\n    fontSize: \"1em\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatarRed: {\r\n    backgroundColor: red[500]\r\n  },\r\n  avatarWhite: {\r\n    backgroundColor: \"black\"\r\n  },\r\n  avatarDessert: {\r\n    backgroundColor: \"yellow\",\r\n    color: \"black\"\r\n  },\r\n  avatarCorovan: {\r\n    backgroundColor: \"green\"\r\n  },\r\n  avatarSparkling: {\r\n    backgroundColor: \"blue\"\r\n  }\r\n}));\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport { Form, Text, ArrayField } from \"informed\";\r\nconst DynamicGrapes = ({ onBlur }) => {\r\n  return (\r\n    <ArrayField field=\"grape\">\r\n      {({ add, fields }) => (\r\n        <>\r\n          {fields.map(({ field, key, remove, value }, i) => (\r\n            <label htmlFor={i} key={key}>\r\n              <br></br>\r\n              grape {i + 1}:\r\n              <Text field={field} id={`grape${i}`} onBlur={onBlur} />\r\n              <button type=\"button\" onClick={remove}>\r\n                Remove Grape\r\n              </button>\r\n              <button onClick={add} type=\"button\">\r\n                Add grape\r\n              </button>\r\n              <br></br>\r\n            </label>\r\n          ))}\r\n        </>\r\n      )}\r\n    </ArrayField>\r\n  );\r\n};\r\nexport default DynamicGrapes;\r\n","import React from \"react\";\r\nimport { Form, Text, ArrayField } from \"informed\";\r\nimport { PromiseProvider } from \"mongoose\";\r\nconst DynamicDescription = ({ onBlur }) => {\r\n  return (\r\n    <ArrayField field=\"description\">\r\n      {({ add, fields }) => (\r\n        <>\r\n          {fields.map(({ field, key, remove, value }, i) => (\r\n            <label htmlFor={i} key={key}>\r\n              <br></br>\r\n              description {i + 1}:\r\n              <Text field={field} id={`description${i}`} onBlur={onBlur} />\r\n              <button type=\"button\" onClick={remove}>\r\n                Remove description\r\n              </button>\r\n              <button onClick={add} type=\"button\">\r\n                Add description\r\n              </button>\r\n              <br></br>\r\n            </label>\r\n          ))}\r\n        </>\r\n      )}\r\n    </ArrayField>\r\n  );\r\n};\r\nexport default DynamicDescription;\r\n","import React, { useState } from \"react\";\r\nimport useStyles from \"./UseStyles\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport EditForm from \"./EditForm\";\r\n\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport { string } from \"prop-types\";\r\nimport { PromiseProvider } from \"mongoose\";\r\nimport DynamicGrapes from \"./DynamicGrapes\";\r\nimport DynamicDescription from \"./DynamicDescription\";\r\nimport {\r\n  Form,\r\n  Text,\r\n  TextArea,\r\n  RadioGroup,\r\n  Radio,\r\n  Checkbox,\r\n  Select,\r\n  Option,\r\n  Scope,\r\n  useFormState,\r\n  useArrayField,\r\n  ArrayField,\r\n  useFormApi\r\n} from \"informed\";\r\nimport { Button, createMuiTheme, Hidden } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\n// import MobileBar from \"./MobileBar\";\r\n\r\nconst MobileBlocks = ({\r\n  data,\r\n  onSelect,\r\n  hideRemoved,\r\n  handleSelect,\r\n  editCardChange,\r\n  editCard,\r\n  curItem,\r\n  curEditItem,\r\n  unEditedItem,\r\n  onChange,\r\n  handleSubmit,\r\n  handleUpdate,\r\n  handleDelete,\r\n  onCurItemClear,\r\n  props,\r\n  onBlur,\r\n  disableOtherEdits,\r\n  setDisableOtherEdits\r\n}) => {\r\n  const grapes = \"grapes\";\r\n  const year = \"year\";\r\n  const place = \"place\";\r\n  const area = \"area\";\r\n  const country = \"country\";\r\n  const appellation = \"appellation\";\r\n  const grape = \"grape\";\r\n  // const description = \"description\";\r\n  const vinyard = \"vinyard\";\r\n  const color = \"color\";\r\n  const mise = \"mise\";\r\n  const coravin = \"coravin\";\r\n  const grapezz = \"grape\";\r\n  const [disabled, setDisabled] = useState(true);\r\n\r\n  const upperCaseFirstLetter = str =>\r\n    str.replace(/\\b[a-z]/g, char => char.toUpperCase());\r\n\r\n  const upperCaseFirstLetterForColor = color => {\r\n    if (color == !null) {\r\n      var str = color.charAt(0);\r\n\r\n      return str.toUpperCase();\r\n    }\r\n\r\n    //check to see if needed in admin mode\r\n  };\r\n\r\n  const checkStatus = status => {\r\n    if (status === \"added\") {\r\n      return classes.cardAdded;\r\n    } else if (status === \"removed\" && !hideRemoved) {\r\n      return classes.cardRemoved;\r\n    } else if (status === \"removed\" && hideRemoved) {\r\n      return classes.cardHidden;\r\n    } else if (status === \"hidden\") {\r\n      return classes.cardHidden;\r\n    } else {\r\n      return classes.card;\r\n    }\r\n  };\r\n  const colorz = color => {\r\n    if (color === \"red\") {\r\n      return classes.avatarRed;\r\n    } else if (color === \"white\") {\r\n      return classes.avatarWhite;\r\n    } else if (color === \"dessert\") {\r\n      return classes.avatarDessert;\r\n    } else if (color === \"corovan\") {\r\n      return classes.avatarCorovan;\r\n    } else {\r\n      return classes.avatarSparkling;\r\n    }\r\n  };\r\n\r\n  function changeCardStuff() {\r\n    if (!editCard) {\r\n      return classes.ButtonBase;\r\n    } else {\r\n      return classes.buttonHidden;\r\n    }\r\n  }\r\n\r\n  function checkIfNull(data) {\r\n    if (data != null) {\r\n      return data;\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  //span\r\n  let curEditItemId = curEditItem._id;\r\n\r\n  function checkIfcurEditItem(id) {\r\n    if (curEditItemId === id) {\r\n      return true;\r\n    }\r\n  }\r\n  // const grapeArray1 = result => {\r\n  //   result.map(res => {\r\n  //     return res[0];\r\n  //   });\r\n  // };\r\n\r\n  // function grapeArray(data, num) {\r\n  //   data.map(num => {\r\n  //     return data[num];\r\n  //   });\r\n  // }\r\n  //to get the subheader as a button\r\n  let vinyard2;\r\n  function vinny(vinyard1) {\r\n    if (vinyard1 === string) {\r\n      vinyard2 = vinyard1.toUpperCase();\r\n    }\r\n    return (\r\n      <ButtonBase\r\n        className={classes.ButtonBase}\r\n        id={vinyard}\r\n        value={vinyard2}\r\n        onClick={event => onSelect(event)}\r\n      >\r\n        {vinyard1}\r\n      </ButtonBase>\r\n    );\r\n  }\r\n  // function editStuff() {\r\n  //   if (!editCard) {\r\n  //     {\r\n  //       ButtonBase;\r\n  //     }\r\n  //   } else {\r\n  //     console.log(\"hey\");\r\n  //   }\r\n  // }\r\n\r\n  function coravinCheck(coravin) {\r\n    if (coravin === true) {\r\n      return \"coravin\";\r\n    } else {\r\n      return \"non-coravin\";\r\n    }\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [deleteButtonEnable, setDeleteButton] = React.useState(true);\r\n  const [editEnable, setEdit] = React.useState(false);\r\n  const [disableSave, setDisabledSave] = useState(true);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n  const handleDelButton = () => {\r\n    setDeleteButton(!deleteButtonEnable);\r\n  };\r\n  const handleEdit = () => {\r\n    setEdit(!editEnable);\r\n  };\r\n  const handleSelect2 = data => {\r\n    handleEdit();\r\n    handleSelect(data._id);\r\n    setDisableOtherEdits();\r\n  };\r\n\r\n  // const touchedLength = obj => {\r\n  //   if (Object.keys(obj).length > 0) {\r\n  //     setDisabledSave(!disableSave);\r\n  //   }\r\n  // };\r\n  const handleSave = event => {\r\n    handleUpdate(event);\r\n    setDisabledSave(prevState => true);\r\n  };\r\n\r\n  const closeIt = () => {\r\n    handleEdit();\r\n    onCurItemClear();\r\n    setDisableOtherEdits();\r\n  };\r\n  const cancelIt = () => {\r\n    handleEdit();\r\n    onCurItemClear();\r\n    setDisableOtherEdits();\r\n  };\r\n\r\n  const onBlurValidate = event => {\r\n    onBlur(event);\r\n    setDisabledSave(prevState => false);\r\n    console.log(event.target);\r\n  };\r\n  const dynamicBlurValidate = () => {\r\n    setDisabledSave(prevState => false);\r\n  };\r\n\r\n  return (\r\n    <Card className={checkStatus(data.status)} key={data._id} raised>\r\n      <CardHeader title={data.name} />\r\n\r\n      <span>\r\n        {disableOtherEdits ? (\r\n          \"\"\r\n        ) : (\r\n          <button type=\"button\" onClick={() => handleSelect2(data)}>\r\n            Edit it brah\r\n          </button>\r\n        )}\r\n\r\n        {editEnable ? (\r\n          <span>\r\n            <button\r\n              type=\"button\"\r\n              hidden={!deleteButtonEnable}\r\n              onClick={handleDelButton}\r\n            >\r\n              Delete?\r\n            </button>\r\n            <br></br>\r\n\r\n            <button\r\n              type=\"button\"\r\n              id=\"button2\"\r\n              hidden={deleteButtonEnable}\r\n              onClick={e => handleDelete(data)}\r\n            >\r\n              Are you Sure You Want to Delete?\r\n            </button>\r\n            <br></br>\r\n            {disableSave ? \"\" : \"DATA IS UNSAVED\"}\r\n            <br></br>\r\n            <Form\r\n              id=\"form-api-form\"\r\n              onSubmit={handleSave}\r\n              initialValues={{\r\n                grape: data.grape,\r\n                description: data.description\r\n              }}\r\n              // onChange={formState => touchedLength(formState.touched)}\r\n            >\r\n              <div>\r\n                {/* <code>{JSON.stringify(formState.touched)}</code> */}\r\n                <button type=\"submit\" disabled={disableSave}>\r\n                  Save\r\n                </button>\r\n                {disableSave ? (\r\n                  <button type=\"button\" onClick={closeIt}>\r\n                    Close\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={e => {\r\n                      if (\r\n                        window.confirm(\r\n                          \"Are you sure you wish to not save this item?\"\r\n                        )\r\n                      )\r\n                        closeIt();\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                )}\r\n\r\n                <label>\r\n                  <br></br>\r\n                  <font size=\"1\">Name:</font>\r\n                  <Text\r\n                    className={classes.text}\r\n                    field=\"name\"\r\n                    initialValue={data.name}\r\n                    onBlur={event => onBlurValidate(event)}\r\n                  ></Text>\r\n                </label>\r\n                <br></br>\r\n                <label>\r\n                  <font size=\"1\">Vinyard:</font>\r\n                  <Text\r\n                    className={classes.text}\r\n                    field=\"vinyard\"\r\n                    initialValue={data.vinyard}\r\n                    onBlur={event => onBlurValidate(event)}\r\n                  ></Text>\r\n                </label>\r\n                <label>\r\n                  <font size=\"1\">id:</font>\r\n                  <Text\r\n                    className={classes.text}\r\n                    field=\"_id\"\r\n                    disabled={true}\r\n                    initialValue={data._id}\r\n                  ></Text>\r\n                </label>\r\n                <br></br>\r\n                <label>\r\n                  <font size=\"1\">Grapes:</font>\r\n                  <Text\r\n                    className={classes.text}\r\n                    field=\"grapes\"\r\n                    initialValue={data.grapes}\r\n                    onBlur={event => onBlurValidate(event)}\r\n                  ></Text>\r\n                </label>\r\n                <br></br>\r\n                {/* start of grapes */}\r\n                <DynamicGrapes onBlur={dynamicBlurValidate} data={data} />\r\n                {/* {DynamicDescription} */}\r\n                <DynamicDescription onBlur={dynamicBlurValidate} data={data} />\r\n                {/* end of grapes */}\r\n                <label>\r\n                  <font size=\"1\">Year:</font>\r\n                  <Text\r\n                    className={classes.text}\r\n                    field=\"year\"\r\n                    type=\"number\"\r\n                    initialValue={data.year}\r\n                    onBlur={event => onBlurValidate(event)}\r\n                  ></Text>\r\n                </label>\r\n                <br></br>\r\n                <label>\r\n                  <font size=\"1\">Place:</font>\r\n                  <Text\r\n                    className={classes.text}\r\n                    field=\"place\"\r\n                    initialValue={data.place}\r\n                    onBlur={event => onBlurValidate(event)}\r\n                  ></Text>\r\n                </label>\r\n                <br></br>\r\n                <label>\r\n                  <font size=\"1\">Area:</font>\r\n                  <Text\r\n                    className={classes.text}\r\n                    field=\"area\"\r\n                    initialValue={data.area}\r\n                    onBlur={event => onBlurValidate(event)}\r\n                  ></Text>\r\n                </label>\r\n                <br></br>\r\n                <label>\r\n                  <font size=\"1\">Country:</font>\r\n                  <Text\r\n                    className={classes.text}\r\n                    field=\"country\"\r\n                    initialValue={data.country}\r\n                    onBlur={event => onBlurValidate(event)}\r\n                  ></Text>\r\n                </label>\r\n                <br></br>\r\n                <label>\r\n                  <font size=\"1\">Appellation:</font>\r\n                  <Text\r\n                    className={classes.text}\r\n                    field=\"appellation\"\r\n                    initialValue={data.appellation}\r\n                    onBlur={event => onBlurValidate(event)}\r\n                  ></Text>\r\n                </label>\r\n                <br></br>\r\n                <label>\r\n                  <font size=\"1\">Price:</font>\r\n                  <Text\r\n                    className={classes.text}\r\n                    field=\"price\"\r\n                    type=\"number\"\r\n                    initialValue={data.price}\r\n                    onBlur={event => onBlurValidate(event)}\r\n                  ></Text>\r\n                </label>\r\n                <br></br>\r\n                <label>\r\n                  Status:\r\n                  <Select\r\n                    field=\"status\"\r\n                    initialValue={data.status}\r\n                    onBlur={event => onBlurValidate(event)}\r\n                  >\r\n                    <Option value=\"\">{data.status}</Option>\r\n                    <Option value=\"none\">None</Option>\r\n                    <Option value=\"added\">Added</Option>\r\n                    <Option value=\"removed\">Removed</Option>\r\n                    <Option value=\"hidden\">Hidden</Option>\r\n                  </Select>\r\n                </label>\r\n                <br></br>\r\n                <label>\r\n                  Mise:\r\n                  <Select\r\n                    field=\"mise\"\r\n                    initialValue={data.mise}\r\n                    onBlur={event => onBlurValidate(event)}\r\n                  >\r\n                    <Option value=\"\">{data.mise}</Option>\r\n                    <Option value=\"ap\">AP</Option>\r\n                    <Option value=\"burg\">BURG</Option>\r\n                    <Option value=\"dbx\">BDX</Option>\r\n                    <Option value=\"flute\">Flute</Option>\r\n                    <Option value=\"dw \">DW</Option>\r\n                    <Option value=\"krug\">Krug Flute</Option>\r\n                  </Select>\r\n                </label>\r\n                <CardActions disableSpacing>\r\n                  <IconButton\r\n                    className={clsx(classes.expand, {\r\n                      [classes.expandOpen]: expanded\r\n                    })}\r\n                    onClick={handleExpandClick}\r\n                    aria-expanded={expanded}\r\n                    aria-label=\"show more\"\r\n                  >\r\n                    <ExpandMoreIcon />\r\n                  </IconButton>\r\n                </CardActions>\r\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                  <CardContent>\r\n                    <br></br>\r\n                    <label>\r\n                      <font size=\"1\">Fun Fact:</font>\r\n                      <TextArea\r\n                        className={classes.text}\r\n                        field=\"funfact\"\r\n                        initialValue={data.funfact}\r\n                        onBlur={event => onBlurValidate(event)}\r\n                      ></TextArea>\r\n                    </label>\r\n                  </CardContent>\r\n                </Collapse>\r\n              </div>\r\n            </Form>\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              A {\"\"}\r\n              {coravinCheck(data.coravin)} {data.year} {data.grapes} by{\" \"}\r\n              {data.vinyard} from {data.place} {data.area} in {\"\"}\r\n              {data.country} served in a {data.mise} for ${data.price}\r\n              <br></br>\r\n              Status: {data.status} <br></br>Appellation: {data.appellation}{\" \"}\r\n              <br></br>\r\n              {data.grape.map((result, index) => (\r\n                <li key={index}>\r\n                  {\" \"}\r\n                  Grape{index + 1}: {result}\r\n                </li>\r\n              ))}\r\n              {data.description.map((result, index) => (\r\n                <li key={index}>\r\n                  {\" \"}\r\n                  Desc{index + 1}: {result} ||\r\n                </li>\r\n              ))}\r\n            </Typography>\r\n            <CardContent>\r\n              <Typography\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                component=\"p\"\r\n              ></Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n              <IconButton\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded\r\n                })}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"show more\"\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </CardActions>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n              <CardContent>\r\n                <Typography paragraph className={classes.paragraph}>\r\n                  Fun Fact: {data.funfact}\r\n                </Typography>\r\n              </CardContent>\r\n            </Collapse>\r\n          </span>\r\n        )}\r\n      </span>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MobileBlocks;\r\n","import React, { useState } from \"react\";\r\nimport MobileBlocks from \"./MobileBlocks\";\r\n\r\nconst MobileBlocksData = ({\r\n  onSelect,\r\n  glasses,\r\n  hideRemoved,\r\n  handleSelect,\r\n  editCardChange,\r\n  editCard,\r\n  curItem,\r\n  curEditItem,\r\n  unEditedItem,\r\n  onChange,\r\n  handleSubmit,\r\n  handleUpdate,\r\n  handleDelete,\r\n  onCurItemClear,\r\n  props,\r\n  onBlur,\r\n  disableOtherEdits,\r\n  setDisableOtherEdits\r\n}) => {\r\n  const data = glasses;\r\n\r\n  const cells = data.map(data => {\r\n    return (\r\n      <MobileBlocks\r\n        data={data}\r\n        key={data._id}\r\n        onSelect={onSelect}\r\n        hideRemoved={hideRemoved}\r\n        handleSelect={handleSelect}\r\n        editCardChange={editCardChange}\r\n        editCard={editCard}\r\n        onChange={onChange}\r\n        curItem={curItem}\r\n        curEditItem={curEditItem}\r\n        unEditedItem={unEditedItem}\r\n        handleUpdate={handleUpdate}\r\n        handleSubmit={handleSubmit}\r\n        handleDelete={handleDelete}\r\n        onCurItemClear={onCurItemClear}\r\n        onBlur={onBlur}\r\n        disableOtherEdits={disableOtherEdits}\r\n        setDisableOtherEdits={setDisableOtherEdits}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <div className=\"MobileBlock\">{cells}</div>;\r\n};\r\nexport default MobileBlocksData;\r\n","import React, { Component } from \"react\";\r\nimport \"./styles/App.css\";\r\nimport WineTable from \"./WineTable\";\r\nimport AddEditForm from \"./AddEditForm\";\r\nimport AddForm from \"./AddForm\";\r\nimport MobileBlocksData from \"./MobileBlocksData\";\r\nimport FormTest from \"./FormTest\";\r\nimport { convertCompilerOptionsFromJson } from \"typescript\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      glasses: [],\r\n      glass: {},\r\n      filter: \"\",\r\n      curItem: {},\r\n      curEditItem: {},\r\n      filteredWines: [],\r\n      unFilteredWines: [],\r\n      count: 0,\r\n      showMyComponent: false,\r\n      addFormHidden: false,\r\n      editCard: false,\r\n      unEditedItem: {},\r\n      disableOtherEdits: false\r\n    };\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n    this.setCurItemStuff = this.setCurItemStuff.bind(this);\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleUpdate = this.handleUpdate.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onBlur = this.onBlur.bind(this);\r\n    // this.onSelect = this.onSelect.bind(this);\r\n    this.onClick = this.onClick.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n    this.onCurItemClear = this.onCurItemClear.bind(this);\r\n    this.showAddForm = this.showAddForm.bind(this);\r\n    this.handleNextClick = this.handleNextClick.bind(this);\r\n    this.handlePrevClick = this.handlePrevClick.bind(this);\r\n    this.editCardChange = this.editCardChange.bind(this);\r\n    this.input = React.createRef();\r\n    this.setDisableOtherEdits = this.setDisableOtherEdits.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Call our fetch function below once the component mounts\r\n    this.callBackendAPI()\r\n\r\n      .then(res => {\r\n        const glassesData = res.express;\r\n        // var aux = { removed: 1, added: 2, none: 3, hidden: 4 };\r\n        // glassesData.sort(function(a, b) {\r\n        //   return aux[a.status] - aux[b.status];\r\n        // });\r\n        const order = {\r\n          removed: 1,\r\n          added: 2,\r\n          none: 3,\r\n          hidden: 4\r\n        };\r\n        glassesData.sort((a, b) => order[a.status] - order[b.status]);\r\n        // glassesData.sort(function(a, b) {\r\n\r\n        //   if (a.status > b.status) {\r\n        //     return 1;\r\n        //   }\r\n        //   if (a.status < b.status) {\r\n        //     return -1;\r\n        //   }\r\n        //   return 0;\r\n\r\n        // });\r\n\r\n        this.setState({ glasses: glassesData });\r\n        this.setState({ unFilteredWines: glassesData });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\r\n  callBackendAPI = async () => {\r\n    const response = await fetch(\"/api\");\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message);\r\n    }\r\n    return body;\r\n  };\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (this.state.curEditItem !== prevState.curEditItem) {\r\n  //     console.log(\"dude\");\r\n  //   }\r\n  // }\r\n  //set state as current item in order to delete or update\r\n  handleSelect = e => {\r\n    let id = e;\r\n    const glasses = this.state.glasses;\r\n\r\n    glasses.map(result => {\r\n      if (result._id === id) {\r\n        this.setState({ curEditItem: result });\r\n      }\r\n    });\r\n  };\r\n\r\n  //delete item\r\n  handleDelete = e => {\r\n    let id = e._id;\r\n\r\n    fetch(`./api/delete?_id=${id}`)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(results => {\r\n        const remainder = this.state.glasses.filter(item => {\r\n          return item._id !== id;\r\n        });\r\n        this.setState({ glasses: remainder, e: {} });\r\n      });\r\n  };\r\n\r\n  //for adding and updating\r\n  handleSubmit = e => {\r\n    let newItem = this.state.curItem;\r\n    let name = newItem.name;\r\n    newItem.mise = e.mise;\r\n    newItem.color = e.color;\r\n    newItem.status = e.status;\r\n    newItem.coravin = e.coravin;\r\n    newItem.grape = e.grape;\r\n    newItem.description = e.description;\r\n\r\n    fetch(`./api/add?=${name}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(newItem)\r\n    })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          console.log(newItem);\r\n          return res.json();\r\n        } else {\r\n          throw Error(`Request rejected with status ${res.status}`);\r\n        }\r\n      })\r\n\r\n      .then(json => {\r\n        let newData;\r\n        if (!newItem._id) {\r\n          this.setState(state => {\r\n            newItem._id = json._id;\r\n            console.log(newItem._id);\r\n            const glasses = [...state.glasses, newItem];\r\n\r\n            return {\r\n              glasses,\r\n\r\n              newItem: \"\"\r\n            };\r\n          });\r\n        } else {\r\n          newData = this.state.glasses.map(item => {\r\n            if (item._id === newItem._id) {\r\n              item = newItem;\r\n            }\r\n            return item;\r\n          });\r\n          this.setState({ glasses: newData });\r\n        }\r\n      })\r\n\r\n      .catch(error => {\r\n        console.log(\"this be your error brah\" + error);\r\n      });\r\n    // console.log(e.name);\r\n  };\r\n\r\n  setCurItemStuff = e => {\r\n    // this.setState({ curItem: e });\r\n\r\n    this.setState(({ count }) => ({\r\n      count: count + 1\r\n    }));\r\n  };\r\n  handleUpdate = e => {\r\n    let newItem = this.state.curEditItem;\r\n    let name = newItem.name;\r\n    newItem.grape = e.grape;\r\n    newItem.description = e.description;\r\n    newItem.status = e.status;\r\n    newItem.mise = e.mise;\r\n    newItem.funfact = e.funfact;\r\n    // let oldWine = initialValue\r\n\r\n    // console.log(oldWine)\r\n    fetch(`./api/add?=${name}`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(newItem)\r\n    })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          throw Error(`Request rejected with status ${res.status}`);\r\n        }\r\n      })\r\n\r\n      .then(json => {\r\n        let newData;\r\n        if (!newItem._id) {\r\n          this.setState(state => {\r\n            newItem._id = json._id;\r\n            console.log(newItem._id);\r\n            const glasses = [...state.glasses, newItem];\r\n\r\n            return {\r\n              glasses,\r\n\r\n              newItem: \"\"\r\n            };\r\n          });\r\n        } else {\r\n          newData = this.state.glasses.map(item => {\r\n            if (item._id === newItem._id) {\r\n              item = newItem;\r\n            }\r\n            return item;\r\n          });\r\n          this.setState({ glasses: newData });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(\"this be your error brah\" + error);\r\n      });\r\n  };\r\n\r\n  //making whatever is typed in as current item\r\n  onChange = event => {\r\n    var newItem = this.state.curItem;\r\n    newItem[event.target.name] = event.target.value;\r\n    console.log(event.target);\r\n  };\r\n  onBlur = event => {\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n\r\n    this.setState(prevState => ({\r\n      curEditItem: {\r\n        ...prevState.curEditItem,\r\n        name: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  //filter to just wines that have the features ie certain grapes, area, etc\r\n  // onSelect = event => {\r\n  //   let value = event.target.value.toLowerCase();\r\n  //   const id = event.target.id;\r\n\r\n  //   // if(value==!null){\r\n  //   //   return value.toLowerCase()\r\n  //   // }\r\n  //   const glasses = this.state.glasses;\r\n\r\n  //   var grapes = glasses.filter(result => {\r\n  //     if (value === \"grapes\") {\r\n  //       return result.grapes === id;\r\n  //     } else if (value === \"grape\") {\r\n  //       return (\r\n  //         result.grape1 === id || result.grape2 === id || result.grape3 === id\r\n  //       );\r\n  //     } else if (value === \"vinyard\") {\r\n  //       return result.vinyard === id;\r\n  //     } else if (value === \"year\") {\r\n  //       return result.year === id;\r\n  //     } else if (value === \"place\") {\r\n  //       return result.place === id;\r\n  //     } else if (value === \"area\") {\r\n  //       return result.area === id;\r\n  //     } else if (value === \"country\") {\r\n  //       return result.country === id;\r\n  //     } else if (value === \"appellation\") {\r\n  //       return result.appellation === id;\r\n  //     } else if (value === \"place\") {\r\n  //       return result.place === id;\r\n  //     } else if (value === \"description\") {\r\n  //       return (\r\n  //         result.description1 === id ||\r\n  //         result.description2 === id ||\r\n  //         result.description3 === id ||\r\n  //         result.description4 === id ||\r\n  //         result.description5 === id ||\r\n  //         result.description6 === id ||\r\n  //         result.description7 === id ||\r\n  //         result.description8 === id ||\r\n  //         result.description9 === id ||\r\n  //         result.description10 === id\r\n  //       );\r\n  //     } else {\r\n  //       return result.color === id;\r\n  //     }\r\n  //   });\r\n\r\n  //   this.setState({ glasses: grapes });\r\n  // };\r\n\r\n  onClick = () => {\r\n    this.setState(state => ({ showMyComponent: !this.state.showMyComponent }));\r\n  };\r\n\r\n  onClear = () => {\r\n    const unFilteredWines1 = this.state.unFilteredWines;\r\n    this.setState({ glasses: unFilteredWines1 });\r\n  };\r\n  onCurItemClear = () => {\r\n    this.setState({ curEditItem: {} });\r\n  };\r\n  showAddForm = () => {\r\n    this.setState(state => ({ addFormHidden: !this.state.addFormHidden }));\r\n  };\r\n  handleNextClick = () => {\r\n    let curItem = this.state.curItem;\r\n    const glasses = this.state.unFilteredWines;\r\n    let index = glasses.indexOf(curItem);\r\n    let nextIndex = index + 1;\r\n\r\n    this.setState({ curItem: glasses[nextIndex] });\r\n  };\r\n  handlePrevClick = () => {\r\n    let curItem = this.state.curItem;\r\n    const glasses = this.state.unFilteredWines;\r\n    let index = glasses.indexOf(curItem);\r\n    let nextIndex = index - 1;\r\n    this.setState({ curItem: glasses[nextIndex] });\r\n  };\r\n  editCardChange = () => {\r\n    this.setState(state => ({ editCard: !this.state.editCard }));\r\n  };\r\n  setDisableOtherEdits = () => {\r\n    this.setState(state => ({\r\n      disableOtherEdits: !this.state.disableOtherEdits\r\n    }));\r\n  };\r\n  ///render portion\r\n\r\n  //\r\n  //\r\n  //\r\n  //\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Admin Mode</h1>\r\n        {/* <FormTest handleSubmit={this.handleSubmit} /> */}\r\n        <AddForm\r\n          handleSubmit={this.handleSubmit}\r\n          curItem={this.state.curItem}\r\n          onChange={this.onChange}\r\n          handleDelete={this.handleDelete}\r\n          onCurItemClear={this.onCurItemClear}\r\n          handleNextClick={this.handleNextClick}\r\n          handlePrevClick={this.handlePrevClick}\r\n          glasses={this.state.glasses}\r\n          handleUpdate={this.handleUpdate}\r\n          setCurItemStuff={this.setCurItemStuff}\r\n          onChange={this.onChange}\r\n        />\r\n\r\n        {/* \r\n          <AddEditForm\r\n            handleSubmit={this.handleSubmit}\r\n            curItem={this.state.curItem}\r\n            onChange={this.onChange}\r\n            handleDelete={this.handleDelete}\r\n            onCurItemClear={this.onCurItemClear}\r\n            handleNextClick={this.handleNextClick}\r\n            handlePrevClick={this.handlePrevClick}\r\n            glasses={this.state.glasses}\r\n          /> */}\r\n        <MobileBlocksData\r\n          glasses={this.state.glasses}\r\n          wines={this.state.filteredWines}\r\n          onSelect={this.onSelect}\r\n          onClear={this.onClear}\r\n          curItem={this.state.curItem}\r\n          curEditItem={this.state.curEditItem}\r\n          unEditedItem={this.unEditedItem}\r\n          mappedGlasses={this.state.mappedGlasses}\r\n          handleSelect={this.handleSelect}\r\n          editCardChange={this.editCardChange}\r\n          editCard={this.state.editCard}\r\n          onChange={this.onChange}\r\n          handleSubmit={this.handleSubmit}\r\n          handleUpdate={this.handleUpdate}\r\n          handleDelete={this.handleDelete}\r\n          onCurItemClear={this.onCurItemClear}\r\n          onBlur={this.onBlur}\r\n          setDisableOtherEdits={this.setDisableOtherEdits}\r\n          disableOtherEdits={this.state.disableOtherEdits}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}